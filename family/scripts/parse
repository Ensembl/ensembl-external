#!/usr/local/bin/perl 
# $Id$

# used inside run-blasts.pl

$|=1;

#
# Programme to Parse Results from any BLASTP output file
#
# Anton Enright - 02/01/1999
#

if ($ARGV[0])
	{
	open (STDIN,$ARGV[0]);
	}

while ( <STDIN>)

        {
        $line=$_;
        chop($line);
#
# Look for a new Query
#

	if (substr($line,0,6) eq "Query=")
			{
			/^Query\= (\S+)(.*)/;
		 	$query=$1;	
			$countedquery++;
			}

#
# Look for hits for this Query
#

#
# Extract Scores for this Hit
#

	if (/^\s+Length \= (\S+)/)
		{
		$subject_length=$1;
		}

	if (/^\s+\((\d+) letters\)/)
		{
		$query_length=$1;
		}

	if (substr($line,0,1) eq '>')
			{
			/^>(\S+)(.*)/;
			$match=$1;
                        $hits++;
			$i=0;
			$j=0;
			}


	if (substr($line,1,7) eq "Score =")
			{
			/^ Score =\s+(\S+) \w+ \((\d+)\), Expect = (\S+).*/;

			if ($query_start[0] != 0)
			{
                        $ql=$#query_end;
                        $sl=$#subject_end;

                        print "$query_start[0] $query_end[$ql] $subject_start[0] $subject_end[$sl]\n";
			
                        $ql=0;
                        $sl=0;
                        @query_start=0;
                        @query_end=0;
                        @subject_start=0;
                        @subject_end=0;
                        }  
				


			print "$query  \t$match  \t$1\t$2\t$3\t$query_length $subject_length";
	
			$i=0;
			$j=0;

                        $pos=1;
                        $pos2=1;
			}

#
# Extract Identities/Similarity Scores for this Hit
#
	if (substr($line,1,12) eq "Identities =")
                        {
                        /^ Identities =\s+(\d+\/\d+) \((\w+\%)\), Positives = (\d+\/\d+) \((\d+\%)\).*/;
                        print "\t$1   \t$2\t$3   \t$4\t";
                        }

	if (/^Query\:\s+(\S+)\s+\S+\s+(\S+)/)
			{
			$query_start[$i]=$1;
			$query_end[$i]=$2;
			$i++;
			}

	if (/^Sbjct\:\s+(\S+)\s+\S+\s+(\S+)/)
			{
			$subject_start[$j]=$1;
			$subject_end[$j]=$2;
			$j++;
			}

	if (substr($line,0,1) eq '>' )
			{
			$ql=$#query_end;
			$sl=$#subject_end;

			if (($query_start[0] > 0) && ($query_end[0] > 0) )
				{
				print "$query_start[0] $query_end[$ql] $subject_start[0] $subject_end[$sl]\n";
				}
			
			$ql=0;
			$sl=0;
			@query_start=0;
			@query_end=0;
			@subject_start=0;
			@subject_end=0;
			}


	}



print "$query_start[0] $query_end[$ql] $subject_start[0] $subject_end[$sl]\n";

print "PARSED> $countedquery\n"

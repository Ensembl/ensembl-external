#!/usr/local/bin/perl
# $Id$

# Script to chop up a peptide file into chunks manageable for submission
# to blast using LSF.
#
# Original by Anton Enright, adapted by Philip Lijnzaad
#

use strict;
use POSIX;
use Getopt::Std;

my $dflt_n=400;
my $dflt_d='seq';

my $opts = 'hd:n:';
use vars qw($opt_h $opt_n $opt_d);

my $Usage = <<END_USAGE;
  Chopper!
  --------
  Divides a FASTA file into sensible chunks for parallel use
  
  Usage: $0 [ -d  dir ] [ -n NUMBER ] FASTAFILE
  Options:
  --------
  -n NUMBER split in approx NUMBER chunks (default: $dflt_n)
  -d DIR    put chunks in subdir DIR      (default: $dflt_d)
END_USAGE

if (@ARGV==0 || !getopts($opts) || $opt_h ||  @ARGV!=1 ) {
    die $Usage; 
}

my $dir = ($opt_d || $dflt_d); $dir .= '/';
my $n_chunks = ($opt_n || $dflt_n);

my $pepfile=shift;
open (FILE, $pepfile) || die "$pepfile: $!";

my $filename=(split /\//, $pepfile)[-1];

my $total=0;
my $sequences=0;
my @line;
while (<FILE>) {
    chomp($_);

    $line[$total]=$_;
    if (substr($_,0,1) eq '>') {
        $sequences++;
    }
    
    $total++;
}

warn "File $ARGV[0] has $total lines and $sequences sequences\n";
my $split=floor($total/$n_chunks); 
warn "File will be split into $n_chunks units of approx $split lines\n";

if ($dir) {
    mkdir($dir, 0755) || warn "$dir: $!";
}

my $x=1;
my $j=0;
my $file="$dir$filename.$x";
open (FILEOUT,"> $file") || die "$file: $!";
for (my $i=0; $i<$total; $i++) {
    my $curr_line=$line[$i];
    $j++;
    
    if ( ($j > $split) && (substr($curr_line,0,1) eq '>') ) {
        $x++;
        $j=0;
        close FILEOUT;
        $file="$dir$filename.$x";
        open (FILEOUT, "> $file") || die "$file: $!";
    }
    print FILEOUT "$curr_line\n";	
}                                       # for i<total
close FILEOUT;
